name: Auto Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.vscodeignore'

permissions:
  contents: write

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install vsce globally
      run: npm install -g @vscode/vsce
      
    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet HEAD~1 HEAD -- package.json src/; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Auto version bump
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        npm run release:patch
        echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        
    - name: Build and package
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        npm run build
        
    - name: Package extension
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        npx vsce package
        
    - name: List generated files
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        ls -la *.vsix
        
    - name: Create Release
      if: steps.changes.outputs.has_changes == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: vscode-auto-commit-*.vsix
        name: Auto Release v${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
        body: |
          ## 自动发布 v${{ env.VERSION }}
          
          此版本包含以下更改：
          - 自动构建和发布流程
          - 支持多种 AI API
          - 智能生成 commit 消息
          
          ### 安装方式
          1. 下载 `vscode-auto-commit-${{ env.VERSION }}.vsix` 文件
          2. 在 VSCode 中选择 "扩展" -> "从 VSIX 安装..."
          3. 选择下载的 VSIX 文件进行安装
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Push changes and tags
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git push origin main --follow-tags
